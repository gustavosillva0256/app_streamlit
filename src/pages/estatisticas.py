"""
P√°gina de estat√≠sticas por regi√£o
"""

import streamlit as st
import plotly.express as px
import plotly.graph_objects as go
import pandas as pd
import numpy as np

def render_estatisticas():
    """Renderiza a p√°gina de estat√≠sticas por regi√£o"""
    
    st.title("üó∫Ô∏è Estat√≠sticas por Regi√£o - CEFOPE")
    st.markdown("An√°lise geogr√°fica da forma√ß√£o de professores em todo o Brasil")
    
    # Sele√ß√£o de regi√£o
    st.subheader("üîç Sele√ß√£o de Regi√£o")
    
    col1, col2 = st.columns([1, 2])
    
    with col1:
        regiao_selecionada = st.selectbox(
            "Regi√£o",
            ["Todas", "Norte", "Nordeste", "Centro-Oeste", "Sudeste", "Sul"]
        )
    
    with col2:
        estado_selecionado = st.selectbox(
            "Estado (se aplic√°vel)",
            ["Todos os Estados"] + [
                "Acre", "Alagoas", "Amap√°", "Amazonas", "Bahia", "Cear√°", "Distrito Federal",
                "Esp√≠rito Santo", "Goi√°s", "Maranh√£o", "Mato Grosso", "Mato Grosso do Sul",
                "Minas Gerais", "Par√°", "Para√≠ba", "Paran√°", "Pernambuco", "Piau√≠",
                "Rio de Janeiro", "Rio Grande do Norte", "Rio Grande do Sul", "Rond√¥nia",
                "Roraima", "Santa Catarina", "S√£o Paulo", "Sergipe", "Tocantins"
            ]
        )
    
    st.markdown("---")
    
    # Vis√£o geral das regi√µes
    st.subheader("üìä Vis√£o Geral das Regi√µes")
    
    # Dados simulados por regi√£o
    regioes_data = {
        "Regi√£o": ["Norte", "Nordeste", "Centro-Oeste", "Sudeste", "Sul"],
        "Professores_Formados": [850, 2100, 1200, 4500, 3200],
        "Cursos_Ativos": [23, 45, 28, 89, 67],
        "Instituicoes_Parceiras": [12, 28, 18, 45, 32],
        "Taxa_Conclusao": [85.2, 88.7, 87.3, 89.1, 91.2],
        "Satisfacao_Media": [4.3, 4.5, 4.4, 4.6, 4.7]
    }
    
    df_regioes = pd.DataFrame(regioes_data)
    
    # M√©tricas por regi√£o
    col1, col2, col3, col4 = st.columns(4)
    
    with col1:
        st.metric(
            label="Total de Professores",
            value=f"{df_regioes['Professores_Formados'].sum():,}",
            delta="+8.5%",
            delta_color="normal"
        )
    
    with col2:
        st.metric(
            label="Cursos Ativos",
            value=f"{df_regioes['Cursos_Ativos'].sum()}",
            delta="+15",
            delta_color="normal"
        )
    
    with col3:
        st.metric(
            label="Institui√ß√µes",
            value=f"{df_regioes['Instituicoes_Parceiras'].sum()}",
            delta="+8",
            delta_color="normal"
        )
    
    with col4:
        st.metric(
            label="Taxa M√©dia de Conclus√£o",
            value=f"{df_regioes['Taxa_Conclusao'].mean():.1f}%",
            delta="+1.2%",
            delta_color="normal"
        )
    
    # Gr√°ficos regionais
    st.markdown("---")
    st.subheader("üìà An√°lise Regional")
    
    col1, col2 = st.columns(2)
    
    with col1:
        # Professores formados por regi√£o
        fig = px.bar(
            df_regioes,
            x="Regi√£o",
            y="Professores_Formados",
            title="Professores Formados por Regi√£o",
            color="Professores_Formados",
            color_continuous_scale="Blues",
            labels={"Professores_Formados": "Quantidade"}
        )
        fig.update_layout(
            plot_bgcolor='rgba(0,0,0,0)',
            paper_bgcolor='rgba(0,0,0,0)'
        )
        st.plotly_chart(fig, use_container_width=True)
    
    with col2:
        # Taxa de conclus√£o por regi√£o
        fig = px.bar(
            df_regioes,
            x="Regi√£o",
            y="Taxa_Conclusao",
            title="Taxa de Conclus√£o por Regi√£o (%)",
            color="Taxa_Conclusao",
            color_continuous_scale="RdYlGn",
            labels={"Taxa_Conclusao": "Taxa (%)"}
        )
        fig.update_layout(
            plot_bgcolor='rgba(0,0,0,0)',
            paper_bgcolor='rgba(0,0,0,0)'
        )
        st.plotly_chart(fig, use_container_width=True)
    
    # Mapa de calor de indicadores
    st.markdown("---")
    st.subheader("üî• Mapa de Calor de Indicadores")
    
    # Criando matriz de correla√ß√£o simulada
    indicadores = ["Formados", "Cursos", "Institui√ß√µes", "Conclus√£o", "Satisfa√ß√£o"]
    regioes_nomes = ["Norte", "Nordeste", "Centro-Oeste", "Sudeste", "Sul"]
    
    # Dados simulados para correla√ß√£o
    matriz_corr = np.array([
        [1.0, 0.8, 0.7, 0.6, 0.5],
        [0.8, 1.0, 0.9, 0.8, 0.7],
        [0.7, 0.9, 1.0, 0.8, 0.6],
        [0.6, 0.8, 0.8, 1.0, 0.9],
        [0.5, 0.7, 0.6, 0.9, 1.0]
    ])
    
    fig = px.imshow(
        matriz_corr,
        x=indicadores,
        y=regioes_nomes,
        title="Correla√ß√£o entre Indicadores por Regi√£o",
        color_continuous_scale="RdBu",
        aspect="auto"
    )
    fig.update_layout(
        plot_bgcolor='rgba(0,0,0,0)',
        paper_bgcolor='rgba(0,0,0,0)'
    )
    st.plotly_chart(fig, use_container_width=True)
    
    # An√°lise detalhada por estado (simulada)
    st.markdown("---")
    st.subheader("üèõÔ∏è An√°lise por Estado")
    
    # Dados simulados por estado
    estados_data = {
        "Estado": ["S√£o Paulo", "Minas Gerais", "Rio de Janeiro", "Bahia", "Paran√°", "Rio Grande do Sul"],
        "Regi√£o": ["Sudeste", "Sudeste", "Sudeste", "Nordeste", "Sul", "Sul"],
        "Professores": [1800, 1200, 950, 850, 1100, 980],
        "Cursos": [35, 28, 22, 18, 25, 22],
        "Taxa_Conclusao": [91.2, 89.5, 88.7, 87.3, 92.1, 90.8]
    }
    
    df_estados = pd.DataFrame(estados_data)
    
    # Filtro por regi√£o se aplic√°vel
    if regiao_selecionada != "Todas":
        df_estados = df_estados[df_estados["Regi√£o"] == regiao_selecionada]
    
    # Gr√°fico de barras por estado
    fig = px.bar(
        df_estados,
        x="Estado",
        y="Professores",
        title=f"Professores Formados por Estado - {regiao_selecionada}",
        color="Taxa_Conclusao",
        color_continuous_scale="RdYlGn",
        labels={"Professores": "Quantidade", "Taxa_Conclusao": "Taxa de Conclus√£o (%)"}
    )
    fig.update_layout(
        plot_bgcolor='rgba(0,0,0,0)',
        paper_bgcolor='rgba(0,0,0,0)',
        xaxis_tickangle=-45
    )
    st.plotly_chart(fig, use_container_width=True)
    
    # Tabela de dados por estado
    st.subheader("üìã Dados Detalhados por Estado")
    st.dataframe(
        df_estados.style.format({
            "Taxa_Conclusao": "{:.1f}%"
        }),
        use_container_width=True
    )
    
    # Indicadores de desenvolvimento educacional
    st.markdown("---")
    st.subheader("üìö Indicadores de Desenvolvimento Educacional")
    
    col1, col2 = st.columns(2)
    
    with col1:
        # IDEB por regi√£o (simulado)
        ideb_data = {
            "Regi√£o": ["Norte", "Nordeste", "Centro-Oeste", "Sudeste", "Sul"],
            "IDEB_Anos_Iniciais": [4.8, 4.9, 5.1, 5.8, 6.2],
            "IDEB_Anos_Finais": [4.2, 4.3, 4.6, 5.1, 5.5]
        }
        
        df_ideb = pd.DataFrame(ideb_data)
        
        fig = px.line(
            df_ideb,
            x="Regi√£o",
            y=["IDEB_Anos_Iniciais", "IDEB_Anos_Finais"],
            title="IDEB por Regi√£o",
            labels={"value": "IDEB", "variable": "N√≠vel"},
            markers=True
        )
        fig.update_layout(
            plot_bgcolor='rgba(0,0,0,0)',
            paper_bgcolor='rgba(0,0,0,0)'
        )
        st.plotly_chart(fig, use_container_width=True)
    
    with col2:
        # Investimento em educa√ß√£o por regi√£o
        investimento_data = {
            "Regi√£o": ["Norte", "Nordeste", "Centro-Oeste", "Sudeste", "Sul"],
            "Investimento_Per_Capita": [1200, 1350, 1500, 1800, 1650]
        }
        
        df_invest = pd.DataFrame(investimento_data)
        
        fig = px.bar(
            df_invest,
            x="Regi√£o",
            y="Investimento_Per_Capita",
            title="Investimento em Educa√ß√£o per Capita (R$)",
            color="Investimento_Per_Capita",
            color_continuous_scale="Greens",
            labels={"Investimento_Per_Capita": "Valor (R$)"}
        )
        fig.update_layout(
            plot_bgcolor='rgba(0,0,0,0)',
            paper_bgcolor='rgba(0,0,0,0)'
        )
        st.plotly_chart(fig, use_container_width=True)
    
    # An√°lise de tend√™ncias regionais
    st.markdown("---")
    st.subheader("üìà Tend√™ncias Regionais")
    
    st.markdown("""
    **Principais observa√ß√µes sobre as tend√™ncias regionais:**
    
    üèÜ **Sudeste**: Mant√©m lideran√ßa em n√∫mero de forma√ß√µes e qualidade, com forte 
    concentra√ß√£o de institui√ß√µes de ensino superior.
    
    üöÄ **Sul**: Apresenta crescimento consistente e alta qualidade, com destaque 
    para inova√ß√£o pedag√≥gica.
    
    üìà **Nordeste**: Mostra evolu√ß√£o significativa, especialmente em programas 
    de forma√ß√£o continuada.
    
    üîÑ **Centro-Oeste**: Crescimento equilibrado com foco em forma√ß√£o espec√≠fica 
    para a regi√£o.
    
    üå± **Norte**: Desenvolvimento em expans√£o com programas adaptados √†s 
    necessidades locais.
    
    **Fatores que influenciam as diferen√ßas regionais:**
    - Concentra√ß√£o de institui√ß√µes de ensino superior
    - Investimento p√∫blico em educa√ß√£o
    - Pol√≠ticas estaduais de forma√ß√£o docente
    - Caracter√≠sticas socioecon√¥micas regionais
    - Demanda por professores em cada regi√£o
    """)
